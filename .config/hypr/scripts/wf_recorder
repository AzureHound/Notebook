#!/bin/env bash

# Ensure wf-recorder is installed
if ! command -v wf-recorder &>/dev/null; then
  notify-send -u critical "wf-recorder not found!"
  exit 1
fi

# Stop recording if already running (including during countdown)
if pgrep -x "wf-recorder" >/dev/null; then
  pkill -INT -x wf-recorder
  notify-send "Previous recording stopped" "Recording exited."
  exit 0
fi

# Set filename with datetime
dateTime=$(date +%Y-%m-%d_%H-%M-%S)
outputDir="$HOME/Videos/Screen Recording"
mkdir -p "$outputDir" # Ensure the Screen Recording directory exists
outputFile="$outputDir/$dateTime.mp4"

# System audio (always captured)
system_audio="alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__Speaker__sink.monitor"

# Auto-detect Bluetooth mic
bt_mic=$(pactl list sources short | awk '/bluez_input/ {print $2; exit}')

# Debugging logs (check if Bluetooth mic is detected)
echo "Detected Bluetooth Mic: $bt_mic" >>"$outputDir/recording_log.txt"

# Default audio source: only system audio
audio_source="$system_audio"

# If a Bluetooth mic is found, use it as the primary mic
if [[ -n "$bt_mic" ]]; then
  audio_source="$system_audio, $bt_mic"
  notify-send -t 1500 "Using Bluetooth Mic" "$bt_mic" # Auto-dismiss in 1.5s
else
  notify-send -t 1500 "No Bluetooth Mic Found" # Auto-dismiss in 1.5s
fi

# Sleep a bit to ensure notification disappears before countdown
sleep 1.6

# Countdown notifications
for i in {3..1}; do
  notify-send -i "/usr/share/icons/Adwaita/scalable/devices/computer.svg" -h string:wf-recorder:record -t 1000 "Recording in:" \
    "<span color='#90a4f4' font='26px'><i><b>$i</b></i></span>"

  # Check if the script is re-run to stop during countdown
  if pgrep -x "wf-recorder" >/dev/null; then
    notify-send "Recording exited" "Stopped before starting."
    exit 0
  fi
  sleep 1
done

# Start recording with the chosen audio source
if ! wf-recorder --bframes max_b_frames --audio="$audio_source" -f "$outputFile" -c h264_vaapi; then
  notify-send -u critical "Recording failed!" "There was an error starting the recording."
  exit 1
fi

# Send notification with actions
send_notification() {
  local message="Recording Captured"$'\n'"$(echo "Video saved in $outputFile" | fold -s -w 70)"

  # Show notification with clickable actions
  action=$(notify-send -i "/usr/share/icons/Adwaita/scalable/mimetypes/video-x-generic.svg" -u normal -a "Screen Recorder" "$message" \
    --action="view=View File" \
    --action="folder=Open Folder" \
    -t 5000)

  # Capture the action response
  case $action in
  "view")
    mpv "$outputFile" # Open the recorded file with mpv
    ;;
  "folder")
    nautilus "$outputDir" # Open the folder with nautilus
    ;;
  *)
    echo "No valid action selected."
    ;;
  esac
}

# Call the function to send the notification
send_notification
